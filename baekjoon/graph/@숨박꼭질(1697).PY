# 100001  인덱스 줫같다
# not graph[x] 사용해서 간 곳을 다시 가면 안 된다 >>> 이거 중요한 기본 >>> 어차피 뒤에 갈 거면 먼저 간 곳에서 간다!!!
# 기본원리는 bfs 이용해서 이전으로부터 온 곳은 이전에다 +1이다


# if 문을 while 내에 두어 끊는 방식은 백트래킹과 유사 >>> 자주 쓰인다

'''
문제
수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 
수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 
순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다.

수빈이와 동생의 위치가 주어졌을 때, 수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 구하는 프로그램을 작성하시오.

입력
첫 번째 줄에 수빈이가 있는 위치 N과 동생이 있는 위치 K가 주어진다. N과 K는 정수이다.

출력
수빈이가 동생을 찾는 가장 빠른 시간을 출력한다.

예제 입력 1 
5 17

예제 출력 1 
4

'''



from collections import deque


n,k=map(int, input().split())
graph=[0]*100001



def bfs():
    
    q=deque([n])


    while q:

        out=q.popleft()
        
        if out == k:
            return print(graph[out])

        for x in [out-1,out+1,2*out]:

            if 0<= x <=100000 and not graph[x]:
                q.append(x)
                graph[x]=graph[out]+1
            

	
            


bfs()


