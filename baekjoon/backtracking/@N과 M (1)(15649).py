# 재귀에 대한 개념이 어려움
# m이 2라 할 때, 첫째 자리는 i로 고정되고 dfs()로 계속 들어가 i(1~n)이 반복된다. 
# 그리고 나오면 첫째자리 i의 dfs()였다는 걸 구조를 그려야 한다(둘째 자리 자체가 첫째 자리 i를 타고 갔단 말)

# if는 중복없이란 조건 때문에 붙인거다 빼고 봐바라

# dfs >>> 역할1) s의 len이 m과 맞는가   역할2) stack에 한자리씩 추가하며 dfs()로 재귀를 반복한다. 
# 역할3) 역할1)과 일치할 경우 stack에서 뱉고 return 

# print(' '.join(map(str,s))) >>> literable한 s원소들을 str로 바꾸고 사이마다 ' '를 추가



'''
문제
자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열

입력
첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)

출력
한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.

수열은 사전 순으로 증가하는 순서로 출력해야 한다.

예제 입력 1 
3 1

예제 출력 1 
1
2
3


'''


n,m=map(int, input().split())
s=[]

def dfs():

    if len(s) == m:
        for i in s:
            return print(' '.join(map(str, s)))

    for i in range(1,n+1):
        if i not in s:
            s.append(i)
            dfs()
            s.pop()


dfs()


